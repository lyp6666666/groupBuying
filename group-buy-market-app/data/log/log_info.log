25-07-16.22:42:02.017 [main            ] INFO  test_lockMarketPayOrder - Starting test_lockMarketPayOrder using Java 1.8.0_402 on 陆的LX with PID 31812 (started by 53256 in E:\javaProject\拼团\group-buy-market\group-buy-market-app)
25-07-16.22:42:02.018 [main            ] INFO  test_lockMarketPayOrder - The following 1 profile is active: "dev"
25-07-16.22:42:03.021 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-07-16.22:42:03.023 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-07-16.22:42:03.063 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
25-07-16.22:42:03.362 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.lyp.config.RedisClientConfig$$EnhancerBySpringCGLIB$$90cb656b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:42:03.717 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.lyp.config.RedisClientConfigProperties' of type [cn.lyp.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:42:04.370 [main            ] INFO  Version                - Redisson 3.26.0
25-07-16.22:42:05.033 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-07-16.22:42:05.045 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-07-16.22:42:05.089 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:42:07.364 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-07-16.22:42:07.429 [main            ] INFO  test_lockMarketPayOrder - Started test_lockMarketPayOrder in 5.817 seconds (JVM running for 6.649)
25-07-16.22:42:07.921 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"409242547353","source":"s01","userId":"xiaofuge"}
25-07-16.22:42:07.921 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:409242547353
25-07-16.22:42:07.940 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-07-16.22:42:08.098 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-07-16.22:42:08.142 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xiaofuge requestParameter:{"activityId":100123,"channel":"c01","goodsId":"9890001","source":"s01","userId":"xiaofuge"}
25-07-16.22:42:08.148 [main            ] ERROR MarketTradeController  - 营销交易锁单业务异常:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"409242547353","source":"s01","userId":"xiaofuge"}
cn.lyp.types.exception.AppException: null
	at cn.lyp.domain.activity.service.trial.node.SwitchNode.doApply(SwitchNode.java:36)
	at cn.lyp.domain.activity.service.trial.node.SwitchNode.doApply(SwitchNode.java:20)
	at cn.lyp.types.design.framework.tree.AbstractMultiThreadStrategyRouter.apply(AbstractMultiThreadStrategyRouter.java:36)
	at cn.lyp.types.design.framework.tree.AbstractMultiThreadStrategyRouter.router(AbstractMultiThreadStrategyRouter.java:25)
	at cn.lyp.domain.activity.service.trial.node.RootNode.doApply(RootNode.java:40)
	at cn.lyp.domain.activity.service.trial.node.RootNode.doApply(RootNode.java:22)
	at cn.lyp.types.design.framework.tree.AbstractMultiThreadStrategyRouter.apply(AbstractMultiThreadStrategyRouter.java:36)
	at cn.lyp.domain.activity.service.IndexGroupBuyMarketServiceImpl.indexMarketTrial(IndexGroupBuyMarketServiceImpl.java:28)
	at cn.lyp.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:99)
	at cn.lyp.test.trigger.test_lockMarketPayOrder.test_lockMarketPayOrder(test_lockMarketPayOrder.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-07-16.22:42:08.151 [main            ] INFO  test_lockMarketPayOrder - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"409242547353","source":"s01","userId":"xiaofuge"} res:{"code":"E0003","info":"拼团活动降级拦截"}
25-07-16.22:42:08.172 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-07-16.22:42:08.178 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-07-16.22:42:37.111 [main            ] INFO  test_lockMarketPayOrder - Starting test_lockMarketPayOrder using Java 1.8.0_402 on 陆的LX with PID 4384 (started by 53256 in E:\javaProject\拼团\group-buy-market\group-buy-market-app)
25-07-16.22:42:37.112 [main            ] INFO  test_lockMarketPayOrder - The following 1 profile is active: "dev"
25-07-16.22:42:37.885 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-07-16.22:42:37.888 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-07-16.22:42:37.919 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-07-16.22:42:38.169 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.lyp.config.RedisClientConfig$$EnhancerBySpringCGLIB$$90674bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:42:38.491 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.lyp.config.RedisClientConfigProperties' of type [cn.lyp.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:42:39.201 [main            ] INFO  Version                - Redisson 3.26.0
25-07-16.22:42:39.882 [redisson-netty-1-5] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-07-16.22:42:39.890 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-07-16.22:42:39.932 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:42:42.295 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-07-16.22:42:42.358 [main            ] INFO  test_lockMarketPayOrder - Started test_lockMarketPayOrder in 5.574 seconds (JVM running for 6.315)
25-07-16.22:42:42.782 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"515045417345","source":"s01","teamId":"33063446","userId":"xiaofuge"}
25-07-16.22:42:42.782 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:515045417345
25-07-16.22:42:42.801 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-07-16.22:42:42.939 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-07-16.22:42:42.973 [main            ] INFO  TradeOrderService      - 拼团交易-查询拼单进度:33063446
25-07-16.22:42:42.979 [main            ] INFO  MarketTradeController  - 交易锁单拦截-拼单目标已达成:xiaofuge 33063446
25-07-16.22:42:42.982 [main            ] INFO  test_lockMarketPayOrder - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"515045417345","source":"s01","teamId":"33063446","userId":"xiaofuge"} res:{"code":"E0006","info":"拼团组队完结，锁单量已达成"}
25-07-16.22:42:43.003 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-07-16.22:42:43.010 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-07-16.22:43:14.021 [main            ] INFO  test_lockMarketPayOrder - Starting test_lockMarketPayOrder using Java 1.8.0_402 on 陆的LX with PID 21088 (started by 53256 in E:\javaProject\拼团\group-buy-market\group-buy-market-app)
25-07-16.22:43:14.022 [main            ] INFO  test_lockMarketPayOrder - The following 1 profile is active: "dev"
25-07-16.22:43:14.779 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-07-16.22:43:14.781 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-07-16.22:43:14.814 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-07-16.22:43:15.070 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [cn.lyp.config.RedisClientConfig$$EnhancerBySpringCGLIB$$98e79059] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:43:15.341 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-cn.lyp.config.RedisClientConfigProperties' of type [cn.lyp.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:43:15.969 [main            ] INFO  Version                - Redisson 3.26.0
25-07-16.22:43:16.586 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-07-16.22:43:16.594 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-07-16.22:43:16.632 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonClient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-07-16.22:43:18.871 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-07-16.22:43:18.932 [main            ] INFO  test_lockMarketPayOrder - Started test_lockMarketPayOrder in 5.226 seconds (JVM running for 6.01)
25-07-16.22:43:19.417 [main            ] INFO  MarketTradeController  - 营销交易锁单:xiaofuge LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"574453611659","source":"s01","teamId":"33063446","userId":"xiaofuge"}
25-07-16.22:43:19.417 [main            ] INFO  TradeOrderService      - 拼团交易-查询未支付营销订单:xiaofuge outTradeNo:574453611659
25-07-16.22:43:19.441 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-07-16.22:43:19.582 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-07-16.22:43:19.618 [main            ] INFO  TradeOrderService      - 拼团交易-查询拼单进度:33063446
25-07-16.22:43:19.622 [main            ] INFO  MarketTradeController  - 交易锁单拦截-拼单目标已达成:xiaofuge 33063446
25-07-16.22:43:19.627 [main            ] INFO  test_lockMarketPayOrder - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"574453611659","source":"s01","teamId":"33063446","userId":"xiaofuge"} res:{"code":"E0006","info":"拼团组队完结，锁单量已达成"}
25-07-16.22:43:19.642 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-07-16.22:43:19.648 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
